<?xml version="1.0" standalone="yes"?>
<library-reference id="schedules"><title>Schedules</title><header name="/home/olivier/work/dev/lib/librjmcmc/lib/rjmcmc/schedule/geometric_schedule.hpp"><namespace name="rjmcmc"><class name="geometric_schedule"><description><para>Geometric schedule class. This class implements a simple geometric schedule class: <equation><title/><alt>\[T_i=T_0*m_coefficient^i\]</alt><mediaobject><imageobject role="html"><imagedata format="PNG" align="center" fileref="images/form_0.png"/></imageobject><textobject role="tex"><phrase>\[T_i=T_0*m_coefficient^i\]</phrase></textobject></mediaobject></equation> </para></description><method-group name="public member functions"/><constructor><parameter name="temp"><paramtype>double</paramtype><description><para>Initial temperature </para></description></parameter><parameter name="coefficient"><paramtype>double</paramtype><description><para>Geometric decrease coefficient </para></description></parameter><description><para>Constructor 
</para></description></constructor></class></namespace></header><header name="/home/olivier/work/dev/lib/librjmcmc/lib/rjmcmc/schedule/inverse_linear_schedule.hpp"><namespace name="rjmcmc"><class name="inverse_linear_schedule"><description><para>Inverse linear schedule class. This class implements a inverse linear schedule class: <equation><title/><alt>\[\frac{1}{T_{i+1}}=\frac{1}{T_i}+\delta\]</alt><mediaobject><imageobject role="html"><imagedata format="PNG" align="center" fileref="images/form_1.png"/></imageobject><textobject role="tex"><phrase>\[\frac{1}{T_{i+1}}=\frac{1}{T_i}+\delta\]</phrase></textobject></mediaobject></equation> </para></description><method-group name="public member functions"><method name="operator*" cv="const"><type>double</type></method><method name="operator++" cv=""><type><classname>inverse_linear_schedule</classname></type></method><method name="operator++" cv=""><type><classname>inverse_linear_schedule</classname></type><parameter name=""><paramtype>int</paramtype></parameter></method></method-group><constructor><parameter name="temp"><paramtype>double</paramtype></parameter><parameter name="delta"><paramtype>double</paramtype></parameter></constructor></class></namespace></header><header name="/home/olivier/work/dev/lib/librjmcmc/lib/rjmcmc/schedule/logarithmic_schedule.hpp"><namespace name="rjmcmc"><class name="logarithmic_schedule"><method-group name="public member functions"><method name="operator*" cv="const"><type>double</type></method><method name="operator++" cv=""><type>logarithmic_schedule</type></method><method name="operator++" cv=""><type>logarithmic_schedule</type><parameter name=""><paramtype>int</paramtype></parameter></method></method-group><constructor><parameter name="temp"><paramtype>double</paramtype></parameter></constructor></class></namespace></header><header name="/home/olivier/work/dev/lib/librjmcmc/lib/rjmcmc/schedule/step_schedule.hpp"><namespace name="rjmcmc"><class name="step_schedule"><method-group name="public member functions"><method name="operator*" cv="const"><type>double</type></method><method name="operator++" cv=""><type>self</type></method><method name="operator++" cv=""><type>self</type><parameter name=""><paramtype>int</paramtype></parameter></method></method-group><constructor><parameter name="n"><paramtype>int</paramtype></parameter><parameter name="schedule"><paramtype>const Schedule &amp;</paramtype></parameter></constructor></class></namespace></header></library-reference>
