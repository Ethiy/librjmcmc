[section:section_rjmcmc __RJMCMC__]

[section:section_rjmcmc_intro Introduction]

A __MCMC__ (MCMC) sampler provides a series of configuration samples according
to a given unnormalized probability distribution function. __RJMCMC__ (RJMCMC) is an extension
of MCMC that allows the configurations space to be the union of spaces of varying dimensions.
The algorithm consists in repeating the following steps until convergence has been detected:

# Randomly choose a proposition kernel [$q_i.png [depth 12pt]]
# Build a new configuration [$x_t.png [depth 12pt]] according to [$q_i.png [depth 12pt]]
# Compute the acceptance ratio [$acceptance_ratio.png [depth 12pt]] and acceptance rate [$acceptance_rate.png [depth 12pt]]
# With probability [$proba_configuration_choice.png [depth 24pt]]

[biblioref Hastings1970]
[biblioref Green1995]

[endsect]

[section:sampler_concept Sampler concept]

The role of a __RJMCMC__ sampler is to generate a __MCMC__ series of configuration with a stationnary pdf based only on its evaluation up to a multiplicative factor. Applied in the __MPP__ context, this allows to bias the sampling of a reference process with energy of the configuration (lower energy configuration getting comparatively more samples).  The reference process may directly be sampled and the density of a configuration may easily be evaluated. The relative influence of the energy values relative to the reference process is tuned by a temperature parameter, as will further be explained in the [link librjmcmc.section_simulated_annealing Simulated Annealing] section.

[todo Samplers_are_templated_by_a_Density_of_]

Models of the `Sampler` concept differ by their computation of the Green ratio impacted by differing formulations of the mixing of the reference density, the energy and the temperature value, [classref rjmcmc::metropolis_sampler] being the most common choice.

Available models:

* [classref rjmcmc::metropolis_sampler]
* [classref rjmcmc::dueck_scheuer_sampler]
* [classref rjmcmc::franz_hoffmann_sampler]
* [classref rjmcmc::szu_hartley_sampler]
* [classref rjmcmc::tsallis_tsariolo_sampler]

[endsect]

[section:kernel_concept Kernel concept]

[todo Kernel]

Available models:

[endsect]

[section:transform_concept Transform concept]

[todo Transform]

Transformations encode a bijective differentiable mapping between spaces of equal dimensions. They provide apply, inverse and abs_jacobian functions

Available models:

* [classref rjmcmc::linear_transform]
* [classref rjmcmc::affine_transform]
* [classref rjmcmc::diagonal_linear_transform]
* [classref rjmcmc::diagonal_affine_transform]

[endsect]

[endsect]
